name: UDMI test suite

on:
  push:
  pull_request:
  schedule:
    - cron: '0 13 * * *'

concurrency:
  group: ci-${{ github.repository }}
  cancel-in-progress: true

jobs:
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/setup-java@v1
        with:
          java-version: '17'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Checkout source
        uses: actions/checkout@v3
      - name: bin/run_tests install_dependencies
        run: bin/run_tests install_dependencies
      - name: bin/run_tests code_tests
        if: ${{ always() }}
        run: bin/run_tests code_tests
      - name: bin/run_tests schema_tests
        if: ${{ always() }}
        run: bin/run_tests schema_tests
      - name: bin/run_tests trace_tests
        if: ${{ always() }}
        run: bin/run_tests trace_tests
      - name: bin/run_tests registrar_tests
        if: ${{ always() }}
        run: bin/run_tests registrar_tests
      - name: bin/run_tests util_tests
        if: ${{ always() }}
        run: bin/run_tests util_tests

  sequencer_dep:
    name: Sequencer Suite
    runs-on: ubuntu-latest
    timeout-minutes: 25
    if: vars.GCP_TARGET_PROJECT != '' && vars.UDMI_REGISTRY_SUFFIX == ''
    env:
      GCP_TARGET_PROJECT: ${{ vars.GCP_TARGET_PROJECT }}
      UDMI_ALT_REGISTRY: ${{ vars.UDMI_ALT_REGISTRY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: '17'
      - name: base setup
        run: bin/run_tests install_dependencies
      - name: registrar clean
        run: bin/test_regclean //gcp/$GCP_TARGET_PROJECT
      - name: sequence tests clean
        run: bin/test_sequencer clean $GCP_TARGET_PROJECT
      - name: sequence tests alpha
        run: bin/test_sequencer alpha $GCP_TARGET_PROJECT
      - name: generated files
        if: ${{ always() }}
        run: more out/sequencer.out out/generated.md || true
      - name: sequencer end state
        if: ${{ always() }}
        run: cat sites/udmi_site_model/out/devices/AHU-1/sequencer_state.json || true
      - name: pubber logs
        if: ${{ always() }}
        run: more pubber.out* out/pubber.out* pubber/out/*/*.json || true
      - name: output logs
        if: ${{ always() }}
        run: cd sites/udmi_site_model/out && more `find . -type f` || true
