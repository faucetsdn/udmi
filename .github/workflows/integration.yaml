name: UDMI Integration Suite

on:
  push:
    tags:
      - '**'
  workflow_dispatch:

concurrency:
  group: it-${{ github.repository }}
  cancel-in-progress: true

jobs:
  images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        container: [ "udmis", "validator", "pubber" ]
    env:
      PUSH_REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      CONTAINER: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Log in to the github registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.PUSH_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Container build and push
        run: |
          revhash=$(git log -n 1 --pretty=format:"%h")
          IMAGE_HASH=g${revhash:0:8}
          PUSH_REPO=$PUSH_REGISTRY/${IMAGE_NAME,,}

          TAG_BASE=$PUSH_REPO:$CONTAINER
          PUSH_TAG=${TAG_BASE}-$IMAGE_HASH
          echo PUSH_TAG=$PUSH_TAG >> $GITHUB_ENV

          bin/clone_model
          $CONTAINER/bin/build check
          bin/container $CONTAINER push --no-check $PUSH_TAG

          docker tag $CONTAINER:latest $TAG_BASE-latest
          docker push $TAG_BASE-latest
          docker tag $CONTAINER:latest $TAG_BASE-${{ github.ref_name }}
          docker push $TAG_BASE-${{ github.ref_name }}

          echo Pushed built $CONTAINER container as $PUSH_TAG | tee -a $GITHUB_STEP_SUMMARY
      - name: Docker images summary
        run: |
          docker images
          echo
          docker history ${{ env.PUSH_TAG }}
  simple:
    name: Simple sequence test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: images
    env:
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Setup Environment
        run: |
          git clone https://github.com/faucetsdn/udmi_site_model.git
          ln -s udmi_site_model/ site_model
          docker network create udminet --subnet 192.168.99.0/24
      - name: Start UDMIS container
        run: |
          cat udmi_site_model/cloud_iot_config.json
          docker run -d --net udminet --name udmis -p 8883:8883 \
            -v $(realpath site_model):/root/site_model \
            -v $PWD/var/tmp:/tmp \
            -v $PWD/var/etcd:/root/udmi/var/etcd \
            -v $PWD/var/mosquitto:/etc/mosquitto \
            ghcr.io/$IMAGE_NAME:udmis-${{ github.ref_name }} udmi/bin/start_local block site_model/cloud_iot_config.json
          for count in `seq 0 30`; do
            echo Waiting for UDMIS startup $((30 - count))
            [[ ! -f var/tmp/pod_ready.txt ]] || break
            (docker ps | fgrep -q udmis) || break
            sleep 1
          done
          ls -l var/tmp/pod_ready.txt 2>&1
      - name: Registrar run
        run: |
          docker run --net udminet --name registrar -v $(realpath site_model):/root/site \
            ghcr.io/faucetsdn/udmi:validator-latest bin/registrar site/cloud_iot_config.json
      - name: Pubber background run
        run: |
          docker run -d --net udminet --name pubber -v $(realpath site_model):/root/site \
            ghcr.io/faucetsdn/udmi:pubber-latest bin/pubber site/cloud_iot_config.json
          for count in `seq 0 30`; do
            (docker ps | fgrep -q pubber) || break
            docker logs pubber | fgrep -q -v "Connection complete" || break
            echo Waiting for pubber startup $((30 - count))...
            sleep 1
          done
          docker logs pubber | fgrep "Connection complete"
      - name: Docker UDMIS logs
        if: ${{ !cancelled() }}
        run: docker logs udmis
      - name: Docker Registrar logs
        if: ${{ !cancelled() }}
        run: docker logs registrar
      - name: Docker Pubber logs
        if: ${{ !cancelled() }}
        run: docker logs pubber

  udmif:
    name: UDMIF unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
      - name: Install Angular CLI
        run: npm install -g @angular/cli
      - name: web tests
        run: echo Disabled udmif/web/runTests due to dependency integration problems
      - name: api tests
        run: echo Disabled udmif/api/runTests due to dependency integration problems
