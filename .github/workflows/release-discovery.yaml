name: UDMI Discovery Node Release

on:
  push:
    branches:
      - 'master'
    paths: 
     - misc/discoverynode/**
     - .github/workflows/release-discovery.yaml

jobs:
  buildenvs:
    name: Build and deploy build environments
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        environments: [ "ubuntu16", "debian11" ]
    env:
      PUSH_REGISTRY: ghcr.io
      REF_NAME: ${{ github.ref_name }}
      BUILDENV: ${{ matrix.environments }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Log in to the github registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.PUSH_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build environment
        run: |
          IMAGE_REF="$PUSH_REGISTRY/$GITHUB_REPOSITORY_OWNER/udmi/discoverynode/buildenv-${BUILDENV}"
          misc/discoverynode/buildenvs/build.sh "$IMAGE_REF" "$BUILDENV"
          echo Pushed built buildenv $BUILDENV container as $IMAGE_REF | tee -a $GITHUB_STEP_SUMMARY

  discovery:
    name: Build and deploy discovery node image
    runs-on: ubuntu-latest
    needs: buildenvs
    strategy:
      fail-fast: false
      matrix:
        environments: [ "ubuntu16", "debian11" ]
    permissions:
      contents: read
      packages: write
    timeout-minutes: 10
    env:
      PUSH_REGISTRY: ghcr.io
      REF_NAME: ${{ github.ref_name }}
      BUILDENV: ${{ matrix.environments }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Log in to the github registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.PUSH_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build binary
        run: |
          misc/discoverynode/bin/build_binary $PUSH_REGISTRY/$GITHUB_REPOSITORY_OWNER/udmi/discoverynode/buildenv-$BUILDENV || true
      - name: build and push oci image
        run: |
          cat <<EOF > Dockerfile
          FROM scratch
          COPY misc/discoverynode/dist/discoverynode discoverynode
          EOF
          IMAGE_TAG=$(date +%y%m%d)-$(git rev-list --count --since="today 00:00:00" HEAD)
          IMAGE_REF="$PUSH_REGISTRY/$GITHUB_REPOSITORY_OWNER/udmi/discoverynode-$BUILDENV"
          docker build --no-cache -t $IMAGE_REF:$IMAGE_TAG -f Dockerfile .
          docker push $IMAGE_REF
          echo Pushed built $CONTAINER container as $IMAGE_REF:$IMAGE_TAG | tee -a $GITHUB_STEP_SUMMARY
