cache:
  key: event-handler-${CI_COMMIT_REF_SLUG}
  paths:
    - udmif/event-handler/node_modules/
    - udmif/event-handler/dist/

include:
  - project: 'buildings-iot/templates/cicd_pipelines'
    ref: main
    file: node16.yml

stages:
  - build
  - test
  - static-scan
  - publish-docker
  - deploy-staging
  - deploy-lab

scan-docker:
  rules:
    - when: never

build-docker:
  rules:
    - when: never

publish-docker:
  rules:
    - when: never

test-node:
  rules:
    - when: never

build-node:
  script:
    - npm install
    - npm install -g @angular/cli
    - npm run build
    - cp prod-package.json dist/package.json
    - rm -rf dist/*test*

deploy-staging:
  stage: deploy-staging
  environment: staging
  image: google/cloud-sdk
  before_script:
    - echo "$GCP_CREDENTIALS" >> ../credentials.json
  script:
    - gcloud auth activate-service-account --key-file ../credentials.json 
    - gcloud config set project $GCP_PROJECT_ID
    - cd udmif/event-handler/dist
    - gcloud functions deploy udmif_event_handler --runtime=nodejs16 --entry-point=handleUdmiEvent --region=us-central1 --trigger-topic=udmi_target --set-env-vars=MONGO_DATABASE=$MONGO_DATABASE,MONGO_PROTOCOL=$MONGO_PROTOCOL,MONGO_USER=$MONGO_USER,MONGO_PWD=$MONGO_PWD,MONGO_HOST=$MONGO_HOST
  rules:
      - if: $CI_COMMIT_BRANCH == "master"
        
deploy-lab:
  stage: deploy-lab
  environment: lab
  image: google/cloud-sdk
  before_script:
    - echo "$GCP_CREDENTIALS" >> ../credentials.json
  script:
    - gcloud auth activate-service-account --key-file ../credentials.json 
    - gcloud config set project $GCP_PROJECT_ID
    - cd udmif/event-handler/dist
    - gcloud functions deploy udmif_event_handler --runtime=nodejs16 --entry-point=handleUdmiEvent --region=us-central1 --trigger-topic=udmi_target --set-env-vars=MONGO_DATABASE=$MONGO_DATABASE,MONGO_PROTOCOL=$MONGO_PROTOCOL,MONGO_USER=$MONGO_USER,MONGO_PWD=$MONGO_PWD,MONGO_HOST=$MONGO_HOST
  rules:
      - if: $CI_COMMIT_BRANCH == "master"
        when: manual 
  


