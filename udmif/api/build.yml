cache:
  key: api-${CI_COMMIT_REF_SLUG}
  paths:
    - udmif/api/node_modules/

include:
  - project: 'buildings-iot/templates/cicd_pipelines'
    ref: main
    file: node16.yml

stages:
  - build
  - test
  - static-scan
  - publish-docker
  - deploy-staging

sonarqube-scan:
  rules:
    - when: never

scan-docker:
  rules:
    - when: never 

build-docker:
  variables: 
    BUILD_DIR: $CI_PROJECT_DIR/udmif/api

publish-docker:
  variables: 
    VERSION: $CI_PIPELINE_IID
    DOCKER_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/udmif-api
    BUILD_DIR: $CI_PROJECT_DIR/udmif/api

deploy-staging:
  extends: .gks-deploy
  stage: deploy-staging
  environment: staging
  variables:
    NAMESPACE: udmi
    CHART_NAME: udmi-api
    HELM_REPO: udmif/helm
    CHART_VALUES: --set image.tag=$CI_PIPELINE_IID --set image.repository=registry.gitlab.com/buildings-iot/udmi/udmif-api --set dockerSecret.accessToken=$GITLAB_REGISTRY_TOKEN --create-namespace --set dockerSecret.registry=$GITLAB_REGISTRY_URL --set dockerSecret.username=gitlab --set dockerSecret.create=true --set env.AUTH_CLIENT_ID=$AUTH_CLIENT_ID --set env.CLIENT_IDS=$CLIENT_IDS --set env.POSTGRESQL_INSTANCE_HOST=$POSTGRESQL_INSTANCE_HOST --set env.POSTGRESQL_PORT=$POSTGRESQL_PORT --set env.POSTGRESQL_USER=$POSTGRESQL_USER --set env.POSTGRESQL_PASSWORD=$POSTGRESQL_PASSWORD --set env.POSTGRESQL_DATABASE=$POSTGRESQL_DATABASE 




    
    

