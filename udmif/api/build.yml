cache:
  key: api-${CI_COMMIT_REF_SLUG}
  paths:
    - udmif/api/node_modules/

include:
  - project: 'buildings-iot/templates/cicd_pipelines'
    ref: main
    file: node.yml

stages:
  - build
  - test
  - static-scan
  - publish-docker
  - deploy-staging
  - deploy-lab

sonarqube-scan:
  rules:
    - when: never

scan-docker:
  rules:
    - when: never
    
publish-docker:
  variables: 
    VERSION: $CI_PIPELINE_IID
    DOCKER_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/udmif-api

deploy-staging:
  extends: .gks-deploy
  stage: deploy-staging
  environment: staging
  variables:
    NAMESPACE: udmi
    CHART_NAME: udmi-api
    HELM_REPO: udmif/helm
    CHART_VALUES: --set image.tag=$CI_PIPELINE_IID --set gitlab.accessToken=$GITLAB_REGISTRY_TOKEN --create-namespace

deploy-lab:
  extends: .gks-deploy
  stage: deploy-lab
  environment: lab
  variables:
    NAMESPACE: udmi
    CHART_NAME: udmi-api
    HELM_REPO: udmif/helm
    CHART_VALUES: --set image.tag=$CI_PIPELINE_IID --set gitlab.accessToken=$GITLAB_REGISTRY_TOKEN --create-namespace
  rules:
      - if: $CI_COMMIT_BRANCH == "master"
        when: manual  



    
    

