type DevicesResponse {
  # the devices that matched the search options
  devices: [Device!]!
  # the total number of devices in the system
  totalCount: Int!
  # the total number of devices after the filter in the search options has been applied
  totalFilteredCount: Int!
}

enum DEVICE_STATE {
  CORRECT
  MISSING
  ERROR
  EXTRA
}

type Point{
  # the ID of the point
  id: ID!
  # the name of the point
  name: String!
  # the value of the point
  value: String!
  # the units of the point
  units: String
  # the name of the point
  state: String!
}

type Device {
  # the unique id of the device
  uuid: ID!
  # the ID of the device
  id: String
  # the name of the device
  name: String!
  # the make of the device
  make: String
  # the model of the device
  model: String
  # the site where the device is installed
  site: String
  # the section within the site where the device is installed
  section: String
  # the date of last payload received for the device
  lastPayload: String
  # the operational state of the device
  operational: Boolean
  # the firmware version fo the device
  firmware: String
  # the serial number of the device
  serialNumber: String
  # the points on a device
  points: [Point!]!
  # JSON validation message
  validation: String
  # validation level from site validation message
  level: Int
  # message from site validation message 
  message: String
  # message details from site validation message
  details: String
  # timestamp on a telemetry message
  lastTelemetryUpdated: String
  # timestamp on a device message
  lastStateUpdated: String
  # timestamp when telemetry was saved to db
  lastTelemetrySaved: String
  # timestamp when device was saved to db
  lastStateSaved: String
  # the bin the device fell into during the site validation, i.e. correct, error, missing, or extra
  state: DEVICE_STATE
  # number of errors from device validation message
  errorsCount: Int!
}

type Query {
  # Get the devices matching the search options
  devices( searchOptions: SearchOptions ): DevicesResponse
  # Get a device by ID
  device( id: ID! ): Device
  # Get points by a Device ID
  points( deviceId: ID!) : [Point!]!
  # Get a list of device names
  deviceNames(searchOptions: DistinctSearchOptions) : [String!]!
  # Get a list of device makes
  deviceMakes(searchOptions: DistinctSearchOptions) : [String!]!
  # Get a list of device models
  deviceModels(searchOptions: DistinctSearchOptions) : [String!]!
  # Get a list of sections
  sections(searchOptions: DistinctSearchOptions) : [String!]!
}
