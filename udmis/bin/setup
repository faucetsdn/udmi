#!/bin/bash -e

if [[ $# != 1 ]]; then
    echo Usage: $0 project_id[/namespace]
    false
fi

full_id=$1
shift

project_id=${full_id%/*}
namespace=${full_id#$project_id}
namespace=${namespace#/}
success=$(mktemp)
rm -f $success

ROOT=$(dirname $0)/..
cd $ROOT

echo Configuring for GCP project $project_id...
# This is slow, and not sure it's necessary...
# gcloud auth application-default set-quota-project $project_id
gcloud --quiet config set project $project_id

saved=$(kubectl config current-context)
kcontexts=$(kubectl config get-contexts -o name | fgrep _${project_id}_)

if [[ -z $kcontexts ]]; then
    echo No kubectl context defined for project $project_id
    echo "  kubectl config get-contexts -o name | fgrep _${project_id}_)"
    false
fi

for context in $kcontexts; do
    kubectl config use-context $context
    used=$(kubectl config view --minify -o jsonpath='{..namespace}')
    if [[ $used == $namespace ]]; then
        echo $context > $success
        echo Matched namespace $namespace
        break
    fi
done

if [[ ! -f $success ]]; then
    echo No context matching namespace ${namespace:-default} found.
    kubectl config use-context $saved
    false
fi
