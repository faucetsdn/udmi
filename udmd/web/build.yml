cache:
  key: web-${CI_COMMIT_REF_SLUG}
  paths:
    - udmd/web/node_modules/
    - udmd/web/dist/

include:
  - project: 'buildings-iot/templates/cicd_pipelines'
    ref: main
    file: node.yml

stages:
  - build
  - test
  - static-scan
  - publish-docker
  - deploy-staging
  - deploy-lab

build-node:
  script:
    - npm install
    - npm install -g @angular/cli
    - npm run build

sonarqube-scan:
  rules:
    - when: never

scan-docker:
  rules:
    - when: never
    
publish-docker:
  variables: 
    VERSION: $CI_PIPELINE_IID
    DOCKER_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/udmd-web
    
test-node:
  stage: test
  rules:
    - when: never

deploy-staging:
  extends: .gks-deploy
  stage: deploy-staging
  environment: staging
  variables:
    NAMESPACE: udmi
    CHART_NAME: udmi-web
    HELM_REPO: udmd/helm
    CHART_VALUES: --set image.tag=$CI_PIPELINE_IID --set gitlab.accessToken=$GITLAB_REGISTRY_TOKEN --set ingress.hosts.host[0]=web.$INGRESS_HOST --create-namespace 


deploy-lab:
  extends: .gks-deploy
  stage: deploy-lab
  environment: lab
  variables:
    NAMESPACE: udmi
    CHART_NAME: udmi-web
    HELM_REPO: udmd/helm
    CHART_VALUES: --set image.tag=$CI_PIPELINE_IID --set gitlab.accessToken=$GITLAB_REGISTRY_TOKEN --create-namespace
  rules:
      - if: $CI_COMMIT_BRANCH == "master"
        when: manual  

