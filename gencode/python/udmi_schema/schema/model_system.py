# generated by datamodel-codegen:
#   filename:  model_system.json

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, ConfigDict, Field, RootModel, conint, constr

from .model_system_hardware import SystemHardware


class Tag(RootModel[Optional[Any]]):
    root: Optional[Any] = None


class Position(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    x: Optional[float] = Field(
        None,
        description='The `x` coordinate of the device location in a project specific coordinate system',
    )
    y: Optional[float] = Field(
        None,
        description='The `y` coordinate of the device location in a project specific coordinate system',
    )
    z: Optional[float] = Field(
        None,
        description='The `z` (height) coordinate of the device location in a project specific coordinate system',
    )


class Coordinates(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    lat: Optional[float] = Field(
        None,
        description='The `latitude` coordinate of the device in the WGS84 coordinate system',
    )
    long: Optional[float] = Field(
        None,
        description='The `longitude` coordinate of the device in the WGS84 coordinate system',
    )
    alt_m: Optional[float] = Field(
        None, description='The `altitude` coordinate of the device in meters'
    )


class Location(BaseModel):
    """
    Properties of the expected physical location of the device
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    site: Optional[constr(pattern=r'^[A-Z]{2}-[A-Z]{3,4}-[A-Z0-9]{2,9}$')] = Field(
        None,
        description='The site name according to the site model in which the device is installed in',
        examples=['US-SFO-XYY'],
    )
    panel: Optional[constr(pattern=r'^[-_a-zA-Z0-9]+$')] = Field(
        None,
        description='The reference of the panel where the device is installed in',
        examples=['Panel123', 'CTRP-567'],
    )
    section: Optional[constr(pattern=r'^[A-Z0-9-]+$')] = None
    room: Optional[constr(pattern=r'^[-_a-zA-Z0-9]+$')] = None
    floor: Optional[constr(pattern=r'^[A-Z0-9-]+$')] = Field(
        None, description='Name of floor level', examples=['1', '1A', 'G', 'B1M', 'RF']
    )
    floor_seq: Optional[int] = Field(
        None,
        description='Sequential integer representation for a floor, primarily for comparisons when non integer floors are used, e.g. 1 and 1M',
    )
    position: Optional[Position] = None
    coordinates: Optional[Coordinates] = None


class Asset(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    guid: Optional[constr(pattern=r'^[a-z]+://[-0-9a-zA-Z_$]+$')] = None
    site: Optional[constr(pattern=r'^[A-Z]{2}-[A-Z]{3,4}-[A-Z0-9]{2,9}$')] = None
    name: Optional[constr(pattern=r'^[A-Z]{2,6}-[1-9][0-9]*$')] = None


class PhysicalTag(BaseModel):
    """
    Information used to print a physical QR code label.
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    asset: Optional[Asset] = None


class Adjunct(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    suffix: Optional[constr(pattern=r'^[a-zA-Z0-9-]+$')] = None


class SystemModel(BaseModel):
    """
    High-level system information about the device. [System Model Documentation](../docs/messages/system.md)
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    name: Optional[str] = Field(
        None, description='Friendly name describing this device'
    )
    description: Optional[str] = Field(
        None, description='Generic human-readable text describing the device'
    )
    device_version: Optional[str] = Field(
        None,
        description='Version of schema supported by the device',
        examples=['1.5.0'],
    )
    zone: Optional[constr(pattern=r'^[-_a-zA-Z0-9]+$')] = Field(
        None,
        description='Aggregation of spaces, partial spaces or other zones that the device is serving',
        examples=['Zone1', 'Kitchen_101'],
    )
    tags: Optional[List[Tag]] = Field(
        None,
        description='Tags associated with the device',
        examples=[['lighting'], ['energy', 'building']],
    )
    location: Optional[Location] = Field(
        None, description='Properties of the expected physical location of the device'
    )
    serial_no: Optional[str] = Field(
        None,
        description='The serial number of the physical device',
        examples=['A1B2C3D4', '00001'],
    )
    hardware: Optional[SystemHardware] = None
    software: Optional[Dict[constr(pattern=r'^[a-z_]+$'), str]] = Field(
        None,
        description='A collection of items which can be used to describe version of software running on a device',
        examples=['firmware', 'os', 'driver'],
    )
    physical_tag: Optional[PhysicalTag] = Field(
        None, description='Information used to print a physical QR code label.'
    )
    adjunct: Optional[Adjunct] = None
    min_loglevel: Optional[conint(ge=100, le=800)] = Field(
        300,
        description='The minimum loglevel for reporting log messages below which log entries should not be sent. Default to 300.',
    )
    metrics_rate_sec: Optional[conint(ge=0, le=86400)] = Field(
        None,
        description='The rate at which the system should send system event updates. 0 indicates no updates.',
    )
