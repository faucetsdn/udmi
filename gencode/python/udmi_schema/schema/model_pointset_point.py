# generated by datamodel-codegen:
#   filename:  model_pointset_point.json

from __future__ import annotations

from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, ConfigDict, Field, RootModel


class BaselineState(Enum):
    """
    Expected state when `baseline_value` is set as the `set_value` for this point the config message
    """

    applied = 'applied'
    updating = 'updating'
    overridden = 'overridden'
    invalid = 'invalid'
    failure = 'failure'


class Tag(RootModel[Optional[Any]]):
    root: Optional[Any] = None


class PointPointsetModel(BaseModel):
    """
    Information about a specific point name of the device.
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    units: Optional[str] = Field(
        None, description='Expected unit configuration for the point'
    )
    writable: Optional[bool] = Field(
        None, description='Indicates if this point is writable (else read-only)'
    )
    baseline_value: Optional[Any] = Field(
        None,
        description='Represents the expected baseline value of the point',
        examples=[22],
    )
    baseline_tolerance: Optional[float] = Field(
        None, description='Maximum deviation from `baseline_value`', examples=[2]
    )
    baseline_state: Optional[BaselineState] = Field(
        None,
        description='Expected state when `baseline_value` is set as the `set_value` for this point the config message',
    )
    range_min: Optional[float] = Field(
        None,
        description='Represents the lower bound of the error threshold for a point',
        examples=[0],
    )
    range_max: Optional[float] = Field(
        None,
        description='Represents the upper bound of the error threshold for a point',
        examples=[100],
    )
    cov_increment: Optional[float] = Field(
        None,
        description='Triggering threshold for partial cov update publishing',
        examples=[1],
    )
    ref: Optional[str] = Field(
        None,
        description='Mapping for the point to an internal resource (e.g. BACnet object reference)',
        examples=['AI3', '400070'],
    )
    tags: Optional[List[Tag]] = Field(
        None,
        description='Tags assosciated with the point',
        examples=[['lighting'], ['energy', 'hvac']],
    )
