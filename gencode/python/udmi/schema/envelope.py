# generated by datamodel-codegen:
#   filename:  envelope.json

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Optional

from pydantic import BaseModel, ConfigDict, constr


class SubFolder(Enum):
    udmi = 'udmi'
    update = 'update'
    invalid = 'invalid'
    error = 'error'
    cloud = 'cloud'
    discovery = 'discovery'
    mapping = 'mapping'
    system = 'system'
    gateway = 'gateway'
    swarm = 'swarm'
    localnet = 'localnet'
    pointset = 'pointset'
    validation = 'validation'
    blobset = 'blobset'
    monitoring = 'monitoring'


class SubType(Enum):
    invalid = 'invalid'
    reflect = 'reflect'
    events = 'events'
    errors = 'errors'
    commands = 'commands'
    config = 'config'
    state = 'state'
    query = 'query'
    reply = 'reply'
    model = 'model'


class Envelope(BaseModel):
    """
    The UDMI `envelope` is not a message itself, per se, but the attributes and other information that is delivered along with a message. [Message Envelope Documentation](../docs/messages/envelope.md)
    """

    model_config = ConfigDict(
        extra='allow',
    )
    deviceId: Optional[constr(pattern=r'^[A-Z]{2,6}-[1-9][0-9]*$')] = None
    deviceNumId: Optional[constr(pattern=r'^[0-9]+$')] = None
    deviceRegistryId: Optional[
        constr(pattern=r'^[a-zA-Z][-a-zA-Z0-9._+~%]*[a-zA-Z0-9]$')
    ] = None
    deviceRegistryLocation: Optional[constr(pattern=r'^[a-z]+-[a-z]+1$')] = None
    projectId: Optional[constr(pattern=r'^([.a-z]+:)?[a-z][-a-z0-9]*[a-z0-9]$')] = None
    payload: Optional[str] = None
    source: Optional[str] = None
    gatewayId: Optional[constr(pattern=r'^[A-Z]{2,6}-[1-9][0-9]*$')] = None
    transactionId: Optional[str] = None
    publishTime: Optional[datetime] = None
    rawFolder: Optional[str] = None
    subFolder: Optional[SubFolder] = None
    subType: Optional[SubType] = None
