# generated by datamodel-codegen:
#   filename:  state_validation_sequence.json

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Dict, Optional

from ._base import DataModel
from .common import Stage
from .entry import Entry
from .state_validation_capability import CapabilityValidationState


class Result(Enum):
    start = 'start'
    errr = 'errr'
    skip = 'skip'
    pass_ = 'pass'
    fail = 'fail'


@dataclass
class Scoring(DataModel):
    value: Optional[int] = None
    total: Optional[int] = None


@dataclass
class SequenceValidationState(DataModel):
    """
    Sequence Validation State
    """

    summary: Optional[str] = None
    stage: Optional[Stage] = None
    capabilities: Optional[Dict[str, CapabilityValidationState]] = None
    result: Optional[Result] = None
    status: Optional[Entry] = None
    scoring: Optional[Scoring] = None
