# generated by datamodel-codegen:
#   filename:  state_validation_capability.json
#   timestamp: 2025-01-31T07:45:30+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, ConfigDict, Field

from .common import Stage
from .entry import Entry


class Result(Enum):
    pass_ = 'pass'
    fail = 'fail'


class CapabilityValidationState(BaseModel):
    """
    Capability validation state
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    summary: Optional[str] = None
    stage: Optional[Stage] = None
    result: Optional[Result] = Field(None, title='Capability result')
    status: Optional[Entry] = None
    score: Optional[int] = None
    total: Optional[int] = None
