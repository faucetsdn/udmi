# generated by datamodel-codegen:
#   filename:  model_cloud.json
#   timestamp: 2025-01-31T07:45:30+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, ConfigDict, Field, constr

from .model_cloud_config import CloudConfigModel
from .model_gateway import GatewayModel


class ConnectionType(Enum):
    """
    Connection type for connecting to cloud
    """

    GATEWAY = 'GATEWAY'
    DIRECT = 'DIRECT'
    PROXIED = 'PROXIED'


class AuthType(Enum):
    """
    The key type used for cloud communication.
    """

    ES256 = 'ES256'
    ES256_X509 = 'ES256_X509'
    RS256 = 'RS256'
    RS256_X509 = 'RS256_X509'


class ResourceType(Enum):
    """
    The resource type of this model
    """

    DEVICE = 'DEVICE'
    GATEWAY = 'GATEWAY'
    REGISTRY = 'REGISTRY'


class KeyFormat(Enum):
    """
    The key type used for cloud communication.
    """

    PASSWORD = 'PASSWORD'
    ES256 = 'ES256'
    ES256_X509 = 'ES256_X509'
    RS256 = 'RS256'
    RS256_X509 = 'RS256_X509'


class Credential(BaseModel):
    key_format: Optional[KeyFormat] = Field(
        None, description='The key type used for cloud communication.'
    )
    key_data: Optional[str] = None


class Operation(Enum):
    ERROR = 'ERROR'
    CREATE = 'CREATE'
    READ = 'READ'
    REPLY = 'REPLY'
    UPDATE = 'UPDATE'
    DELETE = 'DELETE'
    MODIFY = 'MODIFY'
    PREVIEW = 'PREVIEW'
    BIND = 'BIND'
    UNBIND = 'UNBIND'
    BOUND = 'BOUND'
    ALLOW = 'ALLOW'
    BLOCK = 'BLOCK'


class CloudModel(BaseModel):
    """
    Information specific to how the device communicates with the cloud.
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    timestamp: Optional[datetime] = Field(
        None,
        description='Not published by devices, appended to message subblocks within cloud pipeline. RFC 3339 Timestamp the payload was generated',
        examples=['2019-01-17T14:02:29.364Z'],
    )
    version: Optional[str] = Field(None, description='Version of the UDMI schema')
    functions_ver: Optional[int] = Field(
        None, description='Function version of this request'
    )
    connection_type: Optional[ConnectionType] = Field(
        None, description='Connection type for connecting to cloud'
    )
    auth_type: Optional[AuthType] = Field(
        None, description='The key type used for cloud communication.'
    )
    device_key: Optional[bool] = Field(
        None,
        description='Indicates if the device private key is provided in the site model.',
    )
    resource_type: Optional[ResourceType] = Field(
        None, description='The resource type of this model'
    )
    gateway: Optional[GatewayModel] = None
    config: Optional[CloudConfigModel] = None
    blocked: Optional[bool] = None
    detail: Optional[str] = None
    credentials: Optional[List[Credential]] = None
    updated_time: Optional[datetime] = None
    last_event_time: Optional[datetime] = None
    last_state_time: Optional[datetime] = None
    last_config_time: Optional[datetime] = None
    last_error_time: Optional[datetime] = None
    last_config_ack: Optional[datetime] = None
    num_id: Optional[str] = None
    operation: Optional[Operation] = None
    metadata: Optional[Dict[constr(pattern=r'^[-_a-zA-Z0-9]+$'), str]] = None
    metadata_str: Optional[str] = Field(
        None,
        description='Strigified version of the metadata object, used for internal backend processing',
    )
    device_ids: Optional[Dict[constr(pattern=r'^[-._a-zA-Z0-9]+$'), Dict[str, Any]]] = (
        Field(
            None,
            description='If operating on the entire registry, then this contains results for multiple devices (batched operation).',
        )
    )
