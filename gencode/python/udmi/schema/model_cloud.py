# generated by datamodel-codegen:
#   filename:  model_cloud.json

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Any, Dict, List, Optional

from ._base import DataModel
from .common import Operation
from .model_cloud_config import ConfigCloudModel
from .model_gateway import GatewayModel


class AuthType(Enum):
    """
    The key type used for cloud communication.
    """

    ES256 = 'ES256'
    ES256_X509 = 'ES256_X509'
    RS256 = 'RS256'
    RS256_X509 = 'RS256_X509'


class ResourceType(Enum):
    """
    The cloud resource type
    """

    DIRECT = 'DIRECT'
    GATEWAY = 'GATEWAY'
    FUNNEL = 'FUNNEL'
    PROXIED = 'PROXIED'
    REGISTRY = 'REGISTRY'


class KeyFormat(Enum):
    """
    The key type used for cloud communication.
    """

    PASSWORD = 'PASSWORD'
    ES256 = 'ES256'
    ES256_X509 = 'ES256_X509'
    RS256 = 'RS256'
    RS256_X509 = 'RS256_X509'


@dataclass
class Credential(DataModel):
    key_format: Optional[KeyFormat] = None
    key_data: Optional[str] = None


@dataclass
class CloudModel(DataModel):
    """
    Information specific to how the device communicates with the cloud.
    """

    timestamp: Optional[str] = None
    version: Optional[str] = None
    functions_ver: Optional[int] = None
    auth_type: Optional[AuthType] = None
    device_key: Optional[bool] = None
    resource_type: Optional[ResourceType] = None
    gateway: Optional[GatewayModel] = None
    config: Optional[ConfigCloudModel] = None
    blocked: Optional[bool] = None
    detail: Optional[str] = None
    credentials: Optional[List[Credential]] = None
    updated_time: Optional[str] = None
    last_event_time: Optional[str] = None
    last_state_time: Optional[str] = None
    last_config_time: Optional[str] = None
    last_error_time: Optional[str] = None
    last_config_ack: Optional[str] = None
    num_id: Optional[str] = None
    operation: Optional[Operation] = None
    metadata: Optional[Dict[str, str]] = None
    metadata_str: Optional[str] = None
    device_ids: Optional[Dict[str, Dict[str, Any]]] = None
