# generated by datamodel-codegen:
#   filename:  config_udmi.json

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import BaseModel, ConfigDict, Field

from .state_udmi import Setup as Setup_1


class Setup(BaseModel):
    hostname: Optional[str] = None
    functions_min: Optional[int] = None
    functions_max: Optional[int] = None
    udmi_version: Optional[str] = Field(
        None, description='Semantic tagged version of udmis install'
    )
    udmi_commit: Optional[str] = Field(
        None, description='Commit hash of this udmis install'
    )
    udmi_ref: Optional[str] = Field(
        None, description='Complete reference of udmis install'
    )
    udmi_timever: Optional[str] = Field(
        None, description='Timestamp version id of udmis install'
    )
    built_at: Optional[datetime] = None
    built_by: Optional[str] = None
    deployed_at: Optional[datetime] = None
    deployed_by: Optional[str] = None


class UdmiConfig(BaseModel):
    """
    Config for a UDMI reflector client
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    timestamp: Optional[datetime] = Field(
        None,
        description='RFC 3339 UTC timestamp the configuration was generated',
        examples=['2019-01-17T14:02:29.364Z'],
    )
    version: Optional[str] = Field(None, description='Version of the UDMI schema')
    last_state: Optional[datetime] = None
    reply: Optional[Setup_1] = None
    setup: Optional[Setup] = Field(None, title='Setup Udmi Config')
