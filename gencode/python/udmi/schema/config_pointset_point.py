# generated by datamodel-codegen:
#   filename:  config_pointset_point.json

from __future__ import annotations

from datetime import datetime
from typing import Any, Optional

from pydantic import BaseModel, ConfigDict, Field, confloat


class PointPointsetConfig(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    ref: Optional[str] = Field(
        None,
        description='Mapping for the point to an internal resource (e.g. BACnet object reference)',
        examples=['AI1106'],
    )
    units: Optional[str] = Field(
        None,
        description='If specified, indicates the units the device should report the data in.',
    )
    set_value: Optional[Any] = Field(
        None,
        description="Used for cloud writeback functionality, this field specifies the value for a given point in the device's current units.",
        examples=[22.4],
    )
    stop_time: Optional[datetime] = Field(
        None,
        description='RFC 3339 timestamp for the specified point write easing to stop',
        examples=['2019-01-17T14:02:29.364Z'],
    )
    cov_increment: Optional[confloat(ge=0.0)] = Field(
        None,
        description='The CoV (change of value) increment, which when set, enables CoV on the point and defines the minimum change in present value of the respective point before an update is published',
    )
