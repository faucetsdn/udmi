# generated by datamodel-codegen:
#   filename:  model_localnet.json
#   timestamp: 2025-01-31T07:45:30+00:00

from __future__ import annotations

from typing import Dict, Optional

from pydantic import BaseModel, ConfigDict, Field, constr

from .model_localnet_family import FamilyLocalnetModel


class Parent(BaseModel):
    """
    Parent device to which the device is physically connected
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    target: Optional[constr(pattern=r'^[A-Z]{2,6}-[1-9][0-9]*$')] = Field(
        None,
        description='ID of the parent device to which the device is physically connected',
        examples=['DDC-1', 'CGW-2'],
    )
    family: Optional[str] = Field(
        None,
        description='Connection family/protocol of the parent device to which the device is physically connected',
        examples=['bacnet_mstp', 'modbus_tcp', 'mqtt'],
    )


class LocalnetModel(BaseModel):
    """
    Used to describe device local network parameters
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    parent: Optional[Parent] = Field(
        None, description='Parent device to which the device is physically connected'
    )
    families: Optional[Dict[constr(pattern=r'^[a-z0-9-]+$'), FamilyLocalnetModel]] = (
        Field(
            None, examples=['bacnet', 'modbus', 'mbus', 'ether', 'ipv4', 'ipv6', 'iot']
        )
    )
