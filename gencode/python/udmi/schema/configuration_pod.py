# generated by datamodel-codegen:
#   filename:  configuration_pod.json
#   timestamp: 2025-01-31T07:45:30+00:00

from __future__ import annotations

from typing import Dict, Optional

from pydantic import BaseModel, ConfigDict, Field, constr

from .access_iot import IotAccess
from .configuration_endpoint import EndpointConfiguration
from .configuration_pod_base import BasePodConfiguration
from .configuration_pod_bridge import BridgePodConfiguration


class PodConfiguration(BaseModel):
    """
    Parameters for configuring the execution run of a UDMIS pod
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    include: Optional[str] = None
    base: Optional[BasePodConfiguration] = None
    flow_defaults: Optional[EndpointConfiguration] = None
    crons: Optional[
        Dict[constr(pattern=r'^[a-z][a-z0-9]*(_[a-z0-9]+)*$'), EndpointConfiguration]
    ] = None
    flows: Optional[
        Dict[constr(pattern=r'^[a-z][a-z0-9]*(_[a-z0-9]+)*$'), EndpointConfiguration]
    ] = None
    bridges: Optional[
        Dict[constr(pattern=r'^[a-z][a-z0-9]*(_[a-z0-9]+)*$'), BridgePodConfiguration]
    ] = None
    iot_access: Optional[Dict[constr(pattern=r'^[a-z]+$'), IotAccess]] = Field(
        None, title='Iot Access Providers'
    )
    iot_data: Optional[Dict[constr(pattern=r'^[a-z]+$'), IotAccess]] = Field(
        None, title='Iot Data Provider'
    )
