# generated by datamodel-codegen:
#   filename:  common.json
#   timestamp: 2025-01-31T07:45:30+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, Field, RootModel


class Mode(Enum):
    """
    Operating mode for the device. Default is 'active'.
    """

    initial = 'initial'
    active = 'active'
    updating = 'updating'
    restart = 'restart'
    terminate = 'terminate'
    shutdown = 'shutdown'


class Family(RootModel[Optional[str]]):
    root: Optional[str] = Field(None, title='Protocol Family')


class Depth(Enum):
    buckets = 'buckets'
    entries = 'entries'
    details = 'details'
    parts = 'parts'


class IotProvider(Enum):
    local = 'local'
    dynamic = 'dynamic'
    implicit = 'implicit'
    pubsub = 'pubsub'
    mqtt = 'mqtt'
    gbos = 'gbos'
    gref = 'gref'
    etcd = 'etcd'
    jwt = 'jwt'
    clearblade = 'clearblade'


class Stage(Enum):
    """
    Stage of a feature implemenation
    """

    disabled = 'disabled'
    alpha = 'alpha'
    preview = 'preview'
    beta = 'beta'
    stable = 'stable'


class Phase(Enum):
    """
    Phase for the management of a configuration blob.
    """

    apply = 'apply'
    final = 'final'


class Blobsets(Enum):
    """
    Predefined system blobsets
    """

    field_iot_endpoint_config = '_iot_endpoint_config'


class Common(BaseModel):
    family: Optional[Family] = None
