# generated by datamodel-codegen:
#   filename:  site_metadata.json
#   timestamp: 2025-01-31T07:45:30+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, List, Optional

from pydantic import BaseModel, ConfigDict, Field, RootModel, constr

from .dimension import Dimension


class Tag(RootModel[Optional[Any]]):
    root: Optional[Any] = None


class Location(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[str] = Field(
        None,
        description='Postal address of the site',
        examples=[
            '1600 Amphitheatre Parkway, Mountain View, CA 94043, United States',
            'Piazza del Colosseo, 1, 00184 Roma RM, Italy',
        ],
    )
    lat: Optional[float] = Field(
        None,
        description='Latitude of the site in WGS84 coordinates, North of the equator, as indicated by a map marker',
        examples=[41.8902],
    )
    long: Optional[float] = Field(
        None,
        description='Longitude of the site in WGS84 coordinates, East of Greenwich, as indicated by a map marker',
        examples=[12.4922],
    )


class Links(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    dashboard: Optional[str] = Field(
        None,
        description='Site dashboard link',
        examples=['https://example.com/dashboard'],
    )
    docs: Optional[str] = Field(
        None,
        description='Folder where the project documentation is stored',
        examples=[
            '//home/user/docs',
            'https://drive.google.com/corp/drive/folders/iamadrivelocation',
        ],
    )
    folder: Optional[str] = Field(
        None,
        description='Folder where the UDMI site model is stored',
        examples=[
            '//home/user/udmi_site_model',
            'https://drive.google.com/corp/drive/folders/iamadrivelocation',
        ],
    )
    image: Optional[str] = Field(
        None,
        description='Image of the site',
        examples=[
            '//home/user/image.png',
            'https://drive.google.com/corp/drive/folders/iamadrivelocation',
        ],
    )
    repo: Optional[str] = Field(
        None,
        description='Source repository where the UDMI site model is stored',
        examples=[
            'https://github.com/faucetsdn/udmi_site_model',
            'git@github.com:faucetsdn/udmi_site_model.git',
        ],
    )
    sheet: Optional[str] = Field(
        None,
        description='Link to a spreadsheet to observe real-time output from any tool',
        examples=['https://docs.google.com/spreadsheets/d/<spreadsheet_id>'],
    )


class Area(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    net_occupied_area: Optional[Dimension] = Field(
        None, description='Net Occupied Area of the site'
    )
    gross_internal_area: Optional[Dimension] = Field(
        None, description='Gross internal Area of the site'
    )


class Electricity(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    carbon_factor: Optional[Dimension] = Field(
        None, description='Carbon dioxide factor for electricity consumption'
    )
    unit_cost: Optional[Dimension] = Field(
        None, description='Unit cost for electricity consumption'
    )


class Gas(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    carbon_factor: Optional[Dimension] = Field(
        None, description='Carbon dioxide factor for gas consumption'
    )
    unit_cost: Optional[Dimension] = Field(
        None, description='Unit cost for gas consumption'
    )


class Water(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    unit_cost: Optional[Dimension] = Field(
        None, description='Unit cost for water consumption'
    )


class Parameters(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    area: Optional[Area] = None
    electricity: Optional[Electricity] = None
    gas: Optional[Gas] = None
    water: Optional[Water] = None


class SiteMetadata(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    timestamp: Optional[datetime] = Field(
        None,
        description='RFC 3339 timestamp when the site metadata was last updated',
        examples=['2019-01-17T14:02:29.364Z'],
    )
    version: Optional[str] = Field(
        None, description='Version of the UDMI schema', examples=['1.5.0']
    )
    site: Optional[constr(pattern=r'^[A-Z]{2}-[A-Z]{3,4}-[A-Z0-9]{2,9}$')] = Field(
        None,
        description='Identifier for the site or building',
        examples=['UK-LON-ABC', 'US-NYC-DEF2'],
    )
    name: Optional[str] = Field(
        None,
        description='Name of the site or building',
        examples=['Cheesegrater', 'Colosseum'],
    )
    tags: Optional[List[Tag]] = Field(
        None,
        description='Tags associated with the site',
        examples=[['new_construction'], ['existing', 'brownfield']],
    )
    location: Optional[Location] = Field(None, title='Site Location')
    links: Optional[Links] = Field(None, title='Site Links')
    parameters: Optional[Parameters] = None
