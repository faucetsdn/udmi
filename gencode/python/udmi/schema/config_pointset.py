# generated by datamodel-codegen:
#   filename:  config_pointset.json
#   timestamp: 2025-01-31T07:45:30+00:00

from __future__ import annotations

from datetime import datetime
from typing import Dict, Optional

from pydantic import BaseModel, ConfigDict, Field, conint, constr

from .config_pointset_point import PointPointsetConfig


class PointsetConfig(BaseModel):
    """
    [Pointset Config Documentation](../docs/messages/pointset.md#config)
    """

    model_config = ConfigDict(
        extra='forbid',
    )
    timestamp: Optional[datetime] = Field(
        None,
        description='RFC 3339 UTC timestamp the configuration was generated',
        examples=['2019-01-17T14:02:29.364Z'],
    )
    version: Optional[str] = Field(None, description='Version of the UDMI schema')
    state_etag: Optional[constr(max_length=32)] = Field(
        None,
        description='The `state_etag` of the last _state_ message sent by the device. [Writeback documentation](../docs/specs/sequences/writeback.md)',
    )
    set_value_expiry: Optional[datetime] = Field(
        None,
        description='An expiry for the the device to revert to baseline (no set value). [Writeback documentation](../docs/specs/sequences/writeback.md)',
    )
    sample_limit_sec: Optional[conint(ge=0, le=86400)] = Field(
        None,
        description='Minimum time between sample updates for the device (including complete and COV updates). Updates more frequent than this should be coalesced into one update.',
    )
    sample_rate_sec: Optional[conint(ge=1, le=86400)] = Field(
        None,
        description='Maximum time between samples for the device to send out a complete update. It can send out updates more frequently than this. Default to 600.',
    )
    points: Optional[
        Dict[constr(pattern=r'^[a-z][a-z0-9]*(_[a-z0-9]+)*$'), PointPointsetConfig]
    ] = Field(
        None,
        description='The points defined in this dictionary is the authoritative source indicating the representative points for the device (in both `telemetry` and `state` messages). [Pointset doumentation](../docs/messages/pointset.md)',
    )
