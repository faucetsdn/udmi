# generated by datamodel-codegen:
#   filename:  model_pointset_point.json

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Any, List, Optional


class BaselineState(Enum):
    """
    Expected state when `baseline_value` is set as the `set_value` for this point the config message
    """

    applied = 'applied'
    updating = 'updating'
    overridden = 'overridden'
    invalid = 'invalid'
    failure = 'failure'


Tag = Optional[Any]


@dataclass
class PointPointsetModel:
    """
    Information about a specific point name of the device.
    """

    units: Optional[str] = None
    writable: Optional[bool] = None
    baseline_value: Optional[Any] = None
    baseline_tolerance: Optional[float] = None
    baseline_state: Optional[BaselineState] = None
    range_min: Optional[float] = None
    range_max: Optional[float] = None
    cov_increment: Optional[float] = None
    ref: Optional[str] = None
    tags: Optional[List[Tag]] = None
