#!/bin/bash -e

cd $(realpath $(dirname $0)/..)

CRED_FILE=auth/credentials.json
CONFIG_FILE=config.out

if [[ -f $CRED_FILE ]]; then
    echo Cowardly refusing to overwrite existing $CRED_FILE
else
    echo Writing creds to $CRED_FILE
    base64 -d <<< "${GCP_PROJECT_CREDS:?}" > $CRED_FILE
fi

cat <<EOF > $CONFIG_FILE
export GCP_PROJECT_NAME=${GCP_PROJECT_NAME:?}
export GCP_PROJECT_ID=${GCP_PROJECT_ID:?}
export GCP_PROJECT_REGION=${GCP_PROJECT_REGION:?}
export GCP_PROJECT_GROUP=${GCP_PROJECT_GROUP:?}
export GCP_PROJECT_CREDS=`base64 -w 0 $CRED_FILE`
export UDMI_SITE_NAME=${UDMI_SITE_NAME:?}
export UDMI_SITE_REGION=${UDMI_SITE_REGION:?}
export UDMI_SITE_GROUP=${UDMI_SITE_GROUP:?}
EOF

echo Config saved to $CONFIG_FILE
sha256sum $CONFIG_FILE $CRED_FILE
cat $CONFIG_FILE | fgrep -v _CREDS=

echo Creating main.tf
sed -E < main.tf.template > main.tf \
    -e "s/@GCP_PROJECT_ID@/${GCP_PROJECT_ID}/"

echo Creating udmi-sites.tf
sed -E < udmi-sites.tf.template > udmi-sites.tf \
    -e "s/@UDMI_SITE_NAME@/${UDMI_SITE_NAME}/" \
    -e "s/@UDMI_SITE_REGION@/${UDMI_SITE_REGION}/" \
    -e "s/@UDMI_SITE_GROUP@/${UDMI_SITE_GROUP}/"

echo Creating terraform.tfvars
sed -E < terraform.tfvars.template > terraform.tfvars \
    -e "s/@GCP_PROJECT_NAME@/${GCP_PROJECT_NAME}/g" \
    -e "s/@GCP_PROJECT_ID@/${GCP_PROJECT_ID}/" \
    -e "s/@GCP_PROJECT_REGION@/${GCP_PROJECT_REGION}/" \
    -e "s/@GCP_PROJECT_GROUP@/${GCP_RPOJECT_GROUP}/"

echo Done with terraform setup.
