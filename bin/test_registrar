#!/bin/bash -e

ROOT_DIR=$(dirname $0)/..
cd ${ROOT_DIR}

bin/clone_model

TEST_SITE=sites/udmi_site_model

bin/registrar ${TEST_SITE}

cat "${TEST_SITE}/registration_summary.json"
echo

clean_devices=$(fgrep 'Z"' ${TEST_SITE}/registration_summary.json | wc -l)

exit_status=0

echo Found ${clean_devices} clean devices.
[ "${clean_devices}" == 4 ] || exit_status=1

device_files=${TEST_SITE}/devices/*

# Test site_metadata settings for system.location.site.
site=$(jq -r .system.location.site < ${TEST_SITE}/site_metadata.json)

function check_norm {
    for name in ${device_files}; do
        if [[ -f ${name}/out/metadata_norm.json ]]; then
            supplied_site=$(jq -r ".system.location.site" < ${name}/metadata.json)
            # If no site value is supplied in per-device metadata, expect default.
            if [[ "${supplied_site}" == "null" ]]; then
                jq -e ".system.location.site == \"${site}\"" \
                   ${name}/out/metadata_norm.json > /dev/null \
                    && echo a$name
            else
                jq -e ".system.location.site == \"${supplied_site}\"" \
                   ${name}/out/metadata_norm.json > /dev/null \
                    && echo b$name
            fi
        fi
    done
    return 0
}

sm_devices=$(check_norm)
echo Found ${sm_devices} with correct site_metadata values.
[ "${sm_devices}" == "${device_files}" ] || exit_status=1

#mv ${TEST_SITE}/site_metadata.json ${TEST_SITE}/_site_metadata.json

#bin/registrar ${TEST_SITE}

echo Done with registrar test, exit code $exit_status
exit $exit_status

