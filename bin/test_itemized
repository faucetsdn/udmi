#!/bin/bash -e

ROOT_DIR=$(dirname $0)/..
cd $ROOT_DIR

if [[ $# != 1 ]]; then
    echo Usage: $0 PROJECT_ID
    false
fi
PROJECT_ID=$1
shift 1

udmi_profile=out/pubber_profile.json
SITE_PATH=sites/udmi_site_model
DEVICE_ID=AHU-1

PUBBER_OUT=out/pubber.out
SEQUENCER_OUT=out/sequencer.out
RESULTS_OUT=out/test_itemized.out
GOLDEN_FILE=etc/test_itemized.out

rm -f $RESULTS_OUT $SEQUENCER_OUT $PUBBER_OUT
touch $RESULTS_OUT $SEQUENCER_OUT $PUBBER_OUT
mkdir -p out

cat <<EOF > $udmi_profile
{
  "site_model": "$PWD/$SITE_PATH",
  "device_id": "$DEVICE_ID",
  "project_id": "$PROJECT_ID"
}
EOF

while read -u 7 action test_name remainder; do
    if [[ $action != TEST ]]; then
        continue;
    fi
    pubber_opts=${remainder/RESULT*/}

    echo -n "TEST $test_name $pubber_opts" >> $RESULTS_OUT
    echo "TEST $test_name $pubber_opts"

    serial_no=sequencer-$RANDOM
    udmi pubber $udmi_profile -x $serial_no $pubber_opts > $PUBBER_OUT 2>&1 &
    WAITING=20
    for i in `seq 1 $WAITING`; do
        if [[ -n $(fgrep "Connection complete" $PUBBER_OUT) ]]; then
            break
        fi
        sleep 1
    done

    if [[ $i -eq $WAITING ]]; then
        echo pubber startup failed:
        cat $PUBBER_OUT
        false
    fi

    bin/sequencer $SITE_PATH $PROJECT_ID $DEVICE_ID $serial_no $test_name 2>&1 | tee $SEQUENCER_OUT

    kill $(ps ax | fgrep pubber | fgrep java | awk '{print $1}')

    result=$(grep -E -m 1 "RESULT [a-z]+ $test_name " $SEQUENCER_OUT)
    echo ${result/*sequencer RESULT/RESULT} >> $RESULTS_OUT

    sleep 2

done 7< $GOLDEN_FILE
