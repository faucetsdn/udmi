#!/bin/bash -e

ROOT=$(realpath $(dirname $0)/..)
cd $ROOT

failures=$(mktemp)
working=$(mktemp)

function test_locate {
    udmi locate $2 > $working
    profile=$(echo $(fgrep profile: $working | cut -d: -f2))
    site_model=$(echo $(fgrep site_model: $working | cut -d: -f2))
    if [[ $profile == $3 && $site_model == $4 ]]; then
        result=PASS
    else
        result=FAIL
        echo $1 param: $2 >> $failures
        echo "  profile expected" $3 was $profile >> $failures
        echo "  site_model expected" $4 was $site_model >> $failures
    fi
    echo $result $1
}

USER_DEFAULT=$HOME/.udmi/default_profile.json
cat <<EOF > $ROOT/out/default_profile.json
{
  "site_model": "sites/udmi_site_model"
}  
EOF

[[ -d $HOME/.udmi ]] && (echo $HOME/.udmi exists, remove before testing && false)
[[ -d $HOME/sites/udmi_site_model/.udmi ]] && (echo $HOME/sites/udmi_site_model/.udmi exists, remove before testing && false)

rm -rf   $HOME/.udmi $HOME/sites/udmi_site_model/.udmi
mkdir -p $HOME/.udmi $HOME/sites/udmi_site_model/.udmi
cp $ROOT/out/default_profile.json $USER_DEFAULT
cp $USER_DEFAULT $HOME/.udmi/profile_foo.json

echo Testing invocation from user root directory...
cd $HOME
test_locate default_site "" .udmi/default_profile.json sites/udmi_site_model
test_locate user_profile foo .udmi/profile_foo.json sites/udmi_site_model
test_locate user_missing bar "" ""

echo Remove user default profile...
rm -f .udmi/default_profile.json
test_locate default_missing "" "" ""

echo Empty user default profile...
echo {} > .udmi/default_profile.json
test_locate default_empty "" .udmi/default_profile.json ""

echo Testing invocation from site model directory...
cd $HOME/sites/udmi_site_model
cp $ROOT/out/default_profile.json .udmi/

test_locate site_default "" sites/udmi_site_model/.udmi/default_profile.json sites/udmi_site_model
test_locate site_profile foo sites/udmi_site_model/.udmi/profile_foo.json sites/udmi_site_model
test_locate site_missing bar "" ""

echo
#rm -rf $HOME/.udmi $HOME/sites/udmi_site_model/.udmi

if [[ -n $(cat $failures) ]]; then
    echo Test failures:
    cat $failures
    false
fi

echo Done with locate tests.
rm -f $failures
