#!/bin/bash -e

ROOT_DIR=$(dirname $0)/..
cd $ROOT_DIR

if [[ $# != 0 ]]; then
    echo Usage: $0
    false
fi

export MQTT_USER=scrupulous
export MQTT_PASS=monkey

bin/start_mosquitto

site_path=sites/udmi_site_model
device_id=AHU-1 # Static device for testing
serial_no=$RANDOM

site_config=$site_path/cloud_iot_config.json
cloud_region=$(jq -r .cloud_region $site_config)
registry_id=$(jq -r .registry_id $site_config)

killall mosquitto_sub || true

echo Subscribing to mqtt/test in the background...
mosquitto_sub -F "%t %p" -t \# -u ${MQTT_USER} -P ${MQTT_PASS} > out/mosquitto.sub &

sleep 1

echo Publishing test message
mosquitto_pub -t mqtt/test -u ${MQTT_USER} -P ${MQTT_PASS} -m "Hello MQTT"

sleep 1

cat <<EOF > /tmp/pubber_config.json
{
    "endpoint": {
      "protocol": "mqtt",
      "transport": "tcp",
      "client_id": "$registry_id/$device_id",
      "hostname": "127.0.0.1",
      "msg_prefix": "/$serial_no/$device_id",
      "config_sync_sec": -1,
      "port": 1883,
      "auth_provider": {
        "basic": {
          "username": "$MQTT_USER",
          "password": "$MQTT_PASS"
        }
      }
    },
    "sitePath": "$site_path",
    "deviceId": "$device_id",
    "serialNo": "$serial_no"
}
EOF

kill $(pgrep -f 'java.*pubber-.*jar') || true

pubber/bin/build

# Clean out the persistant data store to ensure a clean state each time.
rm -rf sites/udmi_site_model/out/devices/$device_id/persistent_data.json

echo Publishing empty config to /$serial_no/$device_id/config
mosquitto_pub -r -t /$serial_no/$device_id/config -u ${MQTT_USER} -P ${MQTT_PASS} -r -m "{}"

echo Running pubber for 10s...
timeout 10s pubber/bin/run /tmp/pubber_config.json || true

echo Received client logs:
cat out/mosquitto.sub

received_no=$(fgrep operational out/mosquitto.sub | head -n 1 | sed -E 's/^[^{]+//' | jq -r .system.serial_no)
received_topic=$(fgrep operational out/mosquitto.sub | head -n 1 | awk '{ print $1 }')

expected_topic=/$serial_no/$device_id/state
if [[ $received_topic != $expected_topic ]]; then
    echo Unexpected received topic $received_topic != $expected_topic
    false
fi

if [[ $received_no != $serial_no ]]; then
    echo Mismatched/missing serial no: $received_no != $serial_no
    false
fi

echo export MQTT_TEST_BROKER=tcp://127.0.0.1:1883
echo Done with mosquitto pubber check.
