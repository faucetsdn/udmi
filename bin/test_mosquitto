#!/bin/bash -e

ROOT_DIR=$(dirname $0)/..
cd $ROOT_DIR

if [[ $# != 1 ]]; then
    echo Usage: $0 PROJECT_ID
    false
fi

project_id=$1
shift

if [[ -n `which rot13` ]]; then
   # Project is provided as a secret, so obfuscate to prevent redactions in server-side logs.
   echo 'Using target project (rot13):' $(echo $project_id | rot13)
else
   echo 'Using target project:' $project_id
fi

site_path=sites/udmi_site_model
device_id=AHU-1 # Static device for testing. Needs to be different than other tests scripts so as not to conflict during CI.

site_config=$site_path/cloud_iot_config.json
cloud_region=$(jq -r .cloud_region $site_config)
registry_id=$(jq -r .registry_id $site_config)

mkdir -p out
PASSWORD_FILE=/etc/mosquitto/test_mosquitto.passwd
USERNAME=scrumptus
PASSWORD=$RANDOM

echo password_file ${PASSWORD_FILE} | sudo tee /etc/mosquitto/conf.d/udmi_test.conf
sudo sed -i 's/allow_anonymous true/allow_anonymous false/' /etc/mosquitto/mosquitto.conf
sudo sed -i 's/#listener/listener/' /etc/mosquitto/mosquitto.conf

sudo touch ${PASSWORD_FILE}
sudo mosquitto_passwd -b ${PASSWORD_FILE} ${USERNAME} ${PASSWORD}
sudo chmod 666 ${PASSWORD_FILE}

sudo systemctl restart mosquitto
systemctl status mosquitto

echo Subscribing to mqtt/test in the background...
mosquitto_sub -t mqtt/test -u ${USERNAME} -P ${PASSWORD} &

sleep 1

echo Publishing test message
mosquitto_pub -t mqtt/test -u ${USERNAME} -P ${PASSWORD} -m "Hello MQTT"

sleep 1

cat <<EOF > /tmp/pubber_config.json
{
    "endpoint": {
      "protocol": "mqtt",
      "transport": "tcp",
      "client_id": "projects/$project_id/locations/$cloud_region/registries/$registry_id/devices/$device_id",
      "hostname": "localhost",
      "port": 1883,
      "auth_provider": {
        "basic": {
          "username": "$USERNAME",
          "password": "$PASSWORD"
        }
      }
    },
    "sitePath": "$site_path",
    "deviceId": "$device_id",
    "serialNo": "$serial_no"
}
EOF

$ROOT_DIR/pubber/bin/build

$ROOT_DIR/pubber/bin/run /tmp/pubber_config.json
