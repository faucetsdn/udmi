#!/bin/bash -e

ROOT_DIR=$(realpath $(dirname $0)/..)
cd $ROOT_DIR

OUTPUT_DIR=$ROOT_DIR/gencode/docs
TMP_DIR=$ROOT_DIR/tmp/schema

schema_files=`ls schema/*.json`

mkdir -p $TMP_DIR
sha1sum $schema_files | sort > $TMP_DIR/schema.hash

if [ "$1" == check ]; then
    more $TMP_DIR/schema.hash $OUTPUT_DIR/schema.hash | cat
    diff $TMP_DIR/schema.hash $OUTPUT_DIR/schema.hash
    echo Schema hashes in $OUTPUT_DIR/schema.hash are up-to-date.
    exit 0
fi

if [ -d venv ]; then
    source venv/bin/activate
fi

rm -rf $OUTPUT_DIR
mkdir -p $OUTPUT_DIR

cp $TMP_DIR/schema.hash $OUTPUT_DIR/schema.hash

# Make a copy of the schema files into a tmp folder for any pre generator fixes
rm -rf $TMP_DIR
mkdir -p $TMP_DIR
cp -r schema/. $TMP_DIR

# Remove file: prefix from references so document generator works
find $TMP_DIR -type f -exec sed -i 's/file://' {} \;

schemas="state event_system event_pointset event_discovery config metadata envelope"

for schema in $schemas; do
    python3 bin/gendocs.py $schema $TMP_DIR $OUTPUT_DIR
done

rm -rf $TMP_DIR

# Create index page with links to different schemas
cp etc/schema_index_template.html $OUTPUT_DIR/index.html

for schema in $schemas; do
    sed -i "s/<!--SCHEMALINK-->/\
        <div class=\"card\"><a href=\"$schema.html\">$schema<\/a><\/div><!--SCHEMALINK-->/"\
        $OUTPUT_DIR/index.html
done

# Add navbar
navbar=$(cat etc/schema_navbar.html)
navbar=$(printf '%q ' $navbar)
find $OUTPUT_DIR -type f -exec sed -i -E "s;(<body[^>]*>);\1$navbar;g" {} \;

# Add dynamic documentation link rewriting
cp etc/extras.js $OUTPUT_DIR/extras.js

find $OUTPUT_DIR -type f -exec sed -i -E "s;</head>;<script src=\"extras.js\" ></script></head>;" {} \;

find $OUTPUT_DIR -type f -exec sed -i -E "s/<body onload=\"anchorOnLoad\(\);\"/\
    <body onload=\"anchorOnLoad\(\);removedHostedMDExtensions\(\);\"/" {} \;
