#!/bin/bash -e

UDMI_ROOT=$(dirname $0)/..
source $UDMI_ROOT/etc/shell_common.sh

block=
if [[ ${1:-} == block ]]; then
    block=$1
    shift
fi

[[ $# == 1 || $# == 2 ]] || usage '[block] ([site_config.json] || [site_model] [project_spec])'

if [[ $# == 1 ]]; then
    site_config=$(realpath $1)
    shift
else
    site_config=$(realpath $1)/cloud_iot_config.json
    project_spec=$2
    shift 2
fi

if [[ ! -f $site_config ]]; then
    fail local startup requires explicit site path file.
fi
site_model=$(dirname $site_config)

# Check for missing etc/ dir for docker execution.
if [[ -d var/ && ! -d etc/ ]]; then
    ln -s var etc
fi

cd $UDMI_ROOT
UDMIS_LOG=/tmp/udmis.log
mkdir -p out
# Do sudo now to prefetch incase it's needed later...
echo Starting local services at $(sudo date -u -Is) | tee $UDMIS_LOG

iot_provider=$(jq -r .iot_provider $site_config)
if [[ -n ${project_spec:-} ]]; then
    project_target=${project_spec##*/}
    iot_provider=${project_spec%/*}
    iot_provider=${iot_provider#//}
fi

if [[ $iot_provider != mqtt ]]; then
    echo Provider type $iot_provider is not a local setup, doing nothing | tee -a $UDMIS_LOG
    exit 0
fi

[[ -n ${project_target:-} ]] || project_target=$(jq -r .project_id $site_config)
registry_id=$(jq -r .registry_id $site_config)${UDMI_REGISTRY_SUFFIX:-}

echo Starting etcd... | tee -a $UDMIS_LOG
bin/start_etcd

source $UDMI_ROOT/etc/mosquitto_ctrl.sh
mkdir -p $CERT_DIR

echo Starting mosquitto on server $project_target | tee -a $UDMIS_LOG
bin/setup_ca $site_model $project_target
bin/start_mosquitto

$MOSQUITTO_CTRL deleteClient $SERV_USER
$MOSQUITTO_CTRL createClient $SERV_USER -p $SERV_PASS # No client_id to allow multiple backend connections.
$MOSQUITTO_CTRL addClientRole $SERV_USER service

echo Starting initializing site $site_model | tee -a $UDMIS_LOG
bin/mosquctl_site $site_model

if [[ -n ${UDMI_ALT_REGISTRY:-} ]]; then
    bin/mosquctl_site $site_model $UDMI_ALT_REGISTRY
fi

# Global access to logs for connection tracking by UDMIS.
sudo chmod a+r /var/log/mosquitto/mosquitto.log

echo Starting udmis proper... | tee -a $UDMIS_LOG
bin/start_udmis

echo Done with local server setup.

[[ -z $block ]] || (echo Blocking until termination. && tail -f /dev/null)
