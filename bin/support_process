#!/bin/bash -e

archive=$1
shift || true

if [[ -z $archive ]]; then
    archive=$(ls -t ~/Downloads/udmi-support_*.zip ~/Downloads/udmi-support_*.tgz | head -n 1)
    echo Auto-detected archive $archive
fi

sites_in=sites/udmi_site_model_*/
sites_out=sites/udmi_site_model/out
archive_dir=${archive%/}
archive_dir=${archive_dir%.zip}
archive_dir=${archive_dir%% *}
archive_dir=${archive_dir##*/}

rm -rf out_* $sites_in
rm -f *_udmi-support_*.tgz

rm -rf out $sites_out
mkdir -p out $sites_out

if [[ ${archive}\$ =~ '.tgz$' ]]; then
    tar -xzvf $archive
    echo Extracted singular archive $archive
    exit 0
fi

if [[ -f $archive ]]; then
    rm -rf $archive_dir
    echo Extracting archive to $archive_dir
    unzip -o "$archive" -d $archive_dir
elif [[ ! -d $archive ]]; then
    echo Unknown archive file $archive
    false
fi

ls -l $archive_dir/
ls $archive_dir/*sequencer*.tgz | xargs -n 1 tar -xzf

find $sites_in -name out-seq -print -exec rsync -ah {}/ $sites_out/ \;

src_count=$(find $sites_in/out-seq -name sequence.md | wc -l)
dst_count=$(find $sites_out -name sequence.md | wc -l)

if [[ $src_count != $dst_count ]]; then
    echo Mismatch in src/dst count: $src_count != $dst_count
    false
fi

echo Restored $dst_count test output files to $sites_out

cat out_*/sequencer.out.combined | sort -k 4 > out/sequencer.out
cat out_*/schema.out.combined | sort -k 4 | uniq > out/schema.out

echo Restored combined schema.out files.

echo Done with processing $archive_dir
