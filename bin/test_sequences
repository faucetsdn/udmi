#!/bin/bash -e

pubber=y
if [[ $1 == -n ]]; then
    pubber=
    shift
fi

if [[ $# != 3 ]]; then
    echo Usage: $0 [-n] site_model target_project sequences_dir
    false
fi

SITE_MODEL=$1
TARGET_PROJECT=$2
SEQUENCES_DIR=$3
shift 3

if [[ -z $TARGET_PROJECT ]]; then
    echo No target project defined, skipping tests.
    exit 0
fi

PUBBER_OUT=pubber.out
EXPECTED_SEQUENCES=2

if [[ -n $pubber ]]; then
    echo Writing pubber output to $PUBBER_OUT
    echo bin/pubber $SITE_MODEL $TARGET_PROJECT AHU-1
    bin/pubber $SITE_MODEL $TARGET_PROJECT AHU-1 > $PUBBER_OUT 2>&1 &
    pubber_pid=$!

    while ! fgrep "Connection complete" $PUBBER_OUT; do
        echo Waiting for pubber startup...
        sleep 5
    done
fi

JARFILE=validator/build/libs/validator-1.0-SNAPSHOT-all.jar
JAVA_CMD="java -cp $JARFILE com.google.daq.mqtt.validator.Validator"

sequences=`ls $SEQUENCES_DIR`
echo Executing seqeunces $sequences
for sequence in $sequences; do
    echo Starting sequence $sequence at `date`
    echo $JAVA_CMD bos-daq-testing schema reflect AHU-1 $SITE_MODEL sequences/$sequence
    $JAVA_CMD bos-daq-testing schema reflect AHU-1 $SITE_MODEL sequences/$sequence
done

seq_count=`echo $sequences | wc -w`
if [ $seq_count != $EXPECTED_SEQUENCES ]; then
    echo Found $seq_count not expected $EXPECTED_SEQUENCES sequences.
    false
fi

echo Done with test sequence execution.

if [[ -n $pubber_pid ]]; then
    kill $pubber_pid
fi
