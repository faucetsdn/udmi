#!/bin/bash -eu

UDMI_ROOT=$(dirname $0)/..
source $UDMI_ROOT/etc/shell_common.sh

if [[ $# -ge 1 ]]; then
    site_model=$1
    shift
fi

GROUP=mosquitto
ETC_DIR=/etc/mosquitto
UDMI_FILE=$ETC_DIR/conf.d/udmi.conf
PASS_FILE=$ETC_DIR/mosquitto.passwd
DYN_FILE=$ETC_DIR/dynamic_security.json
CERT_DIR=$ETC_DIR/certs
CA_CERT=$CERT_DIR/ca.crt

AUTH_USER=scrumptious
AUTH_PASS=aardvark
echo Configuring MQTT user: $AUTH_USER

if [[ ! -f $UDMI_FILE ]]; then
    echo Creating new $UDMI_FILE from template...
    sudo cp etc/mosquitto_udmi.conf $UDMI_FILE
    PLUGIN_FILE=$(whereis -b mosquitto_dynamic_security.so | awk '{print $2}')
    ls -l "$PLUGIN_FILE"
    echo Configuring dynamic security plugin $PLUGIN_FILE
    sudo sed -i "s%plugin dynsec%plugin $PLUGIN_FILE%" $UDMI_FILE
    sudo sed -i "s%plugin_opt_config_file dynsec%plugin_opt_config_file $DYN_FILE%" $UDMI_FILE
fi

if [[ ! -f $DYN_FILE ]]; then
    echo Creating new $DYN_FILE
    sudo mosquitto_ctrl dynsec init $DYN_FILE $AUTH_USER $AUTH_PASS
    sudo chgrp $GROUP $DYN_FILE
    sudo chmod 0660 $DYN_FILE
fi

if [[ ! -f $CERT_DIR/ca.crt ]]; then
    echo Importing server certs from $site_model...
    sudo cp $site_model/reflector/ca.* $CERT_DIR/
    sudo cp $site_model/reflector/server.* $CERT_DIR/
    sudo chgrp -R $GROUP $CERT_DIR
    sudo chmod 0640 $CERT_DIR/server.key
    ls -l $CERT_DIR
fi

if [[ ! -f $PASS_FILE ]]; then
    echo Creating $PASS_FILE
    sudo touch $PASS_FILE
    sudo chmod 0640 $PASS_FILE
    sudo chgrp $GROUP $PASS_FILE
    sudo mosquitto_passwd -b ${PASS_FILE} ${AUTH_USER} ${AUTH_PASS}
fi

sudo systemctl restart mosquitto

CLIENT_DIR=$site_model/reflector

CONNECT_OPTS="-p 8883 -u $AUTH_USER -P $AUTH_PASS --insecure --cafile $CA_CERT --cert $CLIENT_DIR/rsa_private.crt --key $CLIENT_DIR/rsa_private.pem"
mosquitto_ctrl $CONNECT_OPTS dynsec createRole device
mosquitto_ctrl $CONNECT_OPTS dynsec addRoleACL device subscribePattern '/#' allow
mosquitto_ctrl $CONNECT_OPTS dynsec addRoleACL device publishClientSend '/#' allow
mosquitto_ctrl $CONNECT_OPTS dynsec createRole service
mosquitto_ctrl $CONNECT_OPTS dynsec addRoleACL service subscribePattern '/#' allow
mosquitto_ctrl $CONNECT_OPTS dynsec addRoleACL service publishClientSend '/#' allow

clients=$(mosquitto_ctrl $CONNECT_OPTS dynsec listClients)
if [[ $clients =~ ${AUTH_USER} ]]; then
    echo Found expected client $AUTH_USER
else
    fail Improper client: $clients
fi

echo use: systemctl status mosquitto
