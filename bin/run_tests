#!/bin/bash -e

function usage() {
  >&2 cat << EOF

$0 [step]

where [step] is one of:
  install_dependencies
  code_tests
  schema_tests
  trace_tests
  registrar_tests
  util_tests
  udmis_tests
  all_tests
EOF
  false
}

failures=out/test-failures
echo -n > $failures

function test_wrap {
    command=$*
    echo -n "Testing $command: "
    outfile=out/test_${command//[ \/]/+}
    result=0
    if $command > $outfile 2>&1; then
        echo pass
    else
        echo fail, output in $outfile
        [[ -s $failures ]] && echo ", " >> $failures
        echo $command >> $failures
    fi
}

case "$1" in
  install_dependencies)
    test_wrap bin/setup_base
    test_wrap bin/clone_model
    sudo ln -fs $PWD/bin/udmi /usr/local/bin/
    ;;
  code_tests)
    test_wrap bin/gencode check
    test_wrap pubber/bin/build check
    test_wrap validator/bin/build check
    test_wrap bin/test_pylint
    ;;
  schema_tests)
    test_wrap bin/test_schema
    ;;
  util_tests)
    test_wrap bin/test_locate
    ;;
  trace_tests)
    test_wrap bin/test_trace simple
    test_wrap bin/test_trace upgrade
    test_wrap bin/test_combos
    ;;
  registrar_tests)
    test_wrap bin/test_registrar
    test_wrap bin/test_sites
    ;;
  udmis_tests)
    test_wrap bin/test_udmis
    ;;
  all_tests)
    bin/run_tests install_dependencies
    bin/run_tests code_tests
    bin/run_tests schema_tests
    bin/run_tests trace_tests
    bin/run_tests registrar_tests
    bin/run_tests util_tests
    bin/run_tests udmis_tests
    ;;
  *)
    usage
    ;;
esac

[[ -s $failures ]] && echo All tests passed!
[[ -s $failures ]] || echo Test failures: $(<failures)
