


global
        log "${SYSLOG_SERVICE_HOST-127.0.0.1}:514" local0 
        #log stdout format raw local0
        chroot /var/lib/haproxy
        user haproxy
        group haproxy
        daemon
        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private
        
        #ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        #ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        #ssl-default-bind-options ssl-min-ver TLSv1.0 no-tls-tickets
defaults
    option tcpka
    option clitcpka 
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  1200s
    timeout server  1200s
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend healthz
   bind :8080
   monitor-uri /healthz

frontend mqtt1
    option logasap
    mode tcp  
    bind :8881 accept-proxy
    tcp-request inspect-delay 5s
    tcp-request content capture req.payload(0,0),mqtt_field_value(connect,client_identifier) len 256
    log-format "open %t %ft %b/%s %hrl %[var(res..pv)] (%B) %Tc"
    tcp-request content reject unless { req.payload(0,0),mqtt_field_value(connect,client_identifier) -m found }

    # reject anything which doesn't look like a GCP MQTT connect
    tcp-request content reject unless { req.payload(0,0),mqtt_field_value(connect,client_identifier) -m beg projects }
    default_backend mqtt1

backend mqtt1
    mode tcp
    timeout server 1200s
    server mqtt1 localhost:881

frontend mqtt1p
    mode tcp  
    bind :881 
    tcp-request inspect-delay 5s
    tcp-request content capture req.payload(0,0),mqtt_field_value(connect,client_identifier) len 256
    log-format "close %t %ft %b/%s %hrl %[var(res..pv)] (%B) %Tc"
    default_backend broker_gcp

frontend mqtt2
    option logasap
    mode tcp  
    bind :8882 accept-proxy
    tcp-request inspect-delay 5s
    tcp-request content capture req.payload(0,0),mqtt_field_value(connect,client_identifier) len 256
    log-format "open %t %ft %b/%s %hrl %[var(res..pv)] (%B) %Tc"
    tcp-request content reject unless { req.payload(0,0),mqtt_field_value(connect,client_identifier) -m found }
    tcp-request content reject unless { req.payload(0,0),mqtt_field_value(connect,client_identifier) -m beg projects }
    
    default_backend broker_gcp

backend mqtt2
    mode tcp
    timeout server 1200s
    server mqtt2 localhost:882

frontend mqtt2p
    mode tcp  
    bind :882 
    tcp-request inspect-delay 5s
    tcp-request content capture req.payload(0,0),mqtt_field_value(connect,client_identifier) len 256
    log-format "close %t %ft %b/%s %hrl %[var(res..pv)] (%B) %Tc"
    default_backend broker_gcp


frontend mqtt3
    option logasap
    mode tcp  
    bind :8883 accept-proxy
    tcp-request inspect-delay 5s
    tcp-request content capture req.payload(0,0),mqtt_field_value(connect,client_identifier) len 256
    log-format "open %t %ft %b/%s %hrl %[var(res..pv)] (%B) %Tc"
    tcp-request content reject unless { req.payload(0,0),mqtt_field_value(connect,client_identifier) -m found }
    tcp-request content reject unless { req.payload(0,0),mqtt_field_value(connect,client_identifier) -m beg projects }

    default_backend broker_gcp

backend mqtt3
    mode tcp
    timeout server 1200s
    server mqtt3 localhost:883

frontend mqtt3p
    mode tcp  
    bind :883 
    tcp-request inspect-delay 5s
    tcp-request content capture req.payload(0,0),mqtt_field_value(connect,client_identifier) len 256
    log-format "close %t %ft %b/%s %hrl %[var(res..pv)] (%B) %Tc"
    default_backend broker_gcp

frontend mqtt4
    option logasap
    mode tcp  
    bind :8884 accept-proxy
    tcp-request inspect-delay 5s
    tcp-request content capture req.payload(0,0),mqtt_field_value(connect,client_identifier) len 256
    log-format "open %t %ft %b/%s %hrl %[var(res..pv)] (%B) %Tc"
    tcp-request content reject unless { req.payload(0,0),mqtt_field_value(connect,client_identifier) -m found }
    tcp-request content reject unless { req.payload(0,0),mqtt_field_value(connect,client_identifier) -m beg projects }
    default_backend broker_gcp

backend mqtt4
    mode tcp
    timeout server 1200s
    server mqtt4 localhost:884

frontend mqtt4p
    mode tcp  
    bind :884 
    tcp-request inspect-delay 5s
    tcp-request content capture req.payload(0,0),mqtt_field_value(connect,client_identifier) len 256
    log-format "close %t %ft %b/%s %hrl %[var(res..pv)] (%B) %Tc"
    default_backend broker_gcp

backend broker_gcp
    mode tcp
    timeout server 1200s
    tcp-response inspect-delay 2s
    acl has_data res.len gt 3
    tcp-response content set-var(res..pv) res.payload(0,0),mqtt_field_value(connack,reason_code) if has_data
    #no-check b/c gcp closes connections if it's not happy and then haproxy thinks the server is down
    server gcp mqtt.googleapis.com:443 no-check inter 10000 ssl verify none
